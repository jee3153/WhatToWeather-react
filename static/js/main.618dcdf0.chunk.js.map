{"version":3,"sources":["components/Main/Main.js","components/BottomSection/WeatherToday/WeatherHourly/WeatherHourly.js","components/BottomSection/WeatherToday/WeatherDaily/WeatherDaily.js","components/BottomSection/Header/Header.js","components/BottomSection/WeatherToday/WeatherToday.js","components/BottomSection/WhatToWear/WhatToWear.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["Main","props","dailySummary","items","currently","react_default","a","createElement","className","includes","location","toCelsius","temperature","summary","WeatherHourly","hourly","map","item","index","key","t","time","Date","getHours","src","concat","process","icon","alt","apparentTemperature","WeatherDaily","numToDay","n","weekday","Array","daily","i","DayNumber","getDay","weeklyDays","min","max","avg","tempAvg","apparentTemperatureMax","apparentTemperatureMin","Header","children","WeatherToday","whatToday","d","BottomSection_Header_Header","summaryToday","WeatherToday_WeatherHourly_WeatherHourly","WeatherToday_WeatherDaily_WeatherDaily","days","WhatToWear","curTemp","top","coat","temp","jacket","hoodie","paddedjacket","tanktop","longshirt","tshirt","bottom","longtrousers","shorttrousers","shoe","boots","flipflop","trainers","shoes","hat","decisionMaker","type","incldues","msg","outfitSuggestion","Spinner","App","state","loading","strSlice","str","split","pop","Math","floor","apiSlice","data","from","arguments","length","undefined","to","slice","lat","long","_this2","this","geo","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","api","fetch","then","res","json","setState","timezone","_this$state","console","log","components_Main_Main","BottomSection_WhatToWear_WhatToWear","BottomSection_WeatherToday_WeatherToday","components_Spinner","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.618dcdf0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Main = props => {\n    let dailySummary = props.dailySummary\n    let items = props.currently\n    return (\n        <div className={dailySummary.includes('rain') || dailySummary.includes('drizzle') ? 'Main Main--rain' : 'Main Main--clear'}>\n            <p className='Main__location'>{props.location}</p>\n            <p className='Main__temperature'>{props.toCelsius(items.temperature)}Â°C</p>\n            <p className='Main__summary'>{items.summary}</p>\n        </div>\n    )\n}\n\nexport default Main\n","import React from 'react'\n\nconst WeatherHourly = (props) => {\n    const UnixConvertor = (t) => {\n        const d = new Date(t * 1000);\n        const hr = d.getHours()\n\n        return hr\n    }\n\n    let hourly = props.hourly\n    return (\n\n        <div className='WeatherHourly'>\n            <ul className='WeatherHourly__lists generic'>\n                {hourly.map((item, index) => (\n                    <li\n                        className='WeatherHourly__list-item' key={index}>\n                        <p className='WeatherHourly__list-time'>{UnixConvertor(item.time) + ':00'}</p>\n                        <img className='WeatherHourly__list-icon' src={`${process.env.PUBLIC_URL}/images/weather/${item.icon}.svg`} alt=\"weather icon\" />\n                        <p className='WeatherHourly__list-temp'>{props.toCelsius(item.apparentTemperature)}Â°</p>\n                    </li>\n                ))}\n            </ul>\n        </div >\n\n    )\n}\n\nexport default WeatherHourly\n\n\n// export class WeatherHourly extends Component {\n\n//     UnixConvertor = (t) => {\n//         const d = new Date(t * 1000);\n//         const hr = d.getHours()\n\n//         return hr\n//     }\n\n\n//     render() {\n//         let items = this.props.hourly\n\n\n//         // let data = item.slice(0, 10).map(({ time: x, apparentTemperature: y, apparentTemperature: label }) => (\n//         //     { x, y: this.props.weatherConv(y), label: `${this.props.weatherConv(label)}Â°`, style: { fill: '#fff' } }\n\n//         // ));\n\n\n\n//         return (\n//             <div>\n//                 <div className='WeatherHourly'>\n//                     <ul className='WeatherHourly__lists generic'>\n//                         {this.props.hourly.map((item, index) => (\n//                             <li\n//                                 className='WeatherHourly__list-item' key={index}>\n//                                 <p className='WeatherHourly__list-time'>{this.UnixConvertor(item.time) + ':00'}</p>\n//                                 <img className='WeatherHourly__list-icon' src={`/images/weather/${item.icon}.svg`} alt=\"weather icon\" />\n//                                 <p className='WeatherHourly__list-temp'>{this.props.weatherConv(item.apparentTemperature)}Â°</p>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                 </div >\n\n//             </div >\n//         )\n//     }\n// }\n\n// export default WeatherHourly\n\n","import React from 'react'\n\n\nconst WeatherDaily = (props) => {\n    const weeklyDays = (t) => {\n\n        const d = new Date(t * 1000);\n        const DayNumber = d.getDay()\n        const week = numToDay(DayNumber)\n\n        return week\n    }\n\n\n    const numToDay = (n) => {\n        const weekday = new Array(7);\n        weekday[0] = \"Sun\";\n        weekday[1] = \"Mon\";\n        weekday[2] = \"Tue\";\n        weekday[3] = \"Wed\";\n        weekday[4] = \"Thurs\";\n        weekday[5] = \"Fri\";\n        weekday[6] = \"Sat\";\n\n        return weekday[n]\n    }\n\n    const tempAvg = (min, max) => {\n\n        let avg = (min + max) / 2;\n        return props.toCelsius(avg);\n\n    }\n\n    // const weeklyDays = () => {\n    //     const d = new Date();\n    //     const weekday = new Array(7);\n    //     weekday[0] = \"Sunday\";\n    //     weekday[1] = \"Monday\";\n    //     weekday[2] = \"Tuesday\";\n    //     weekday[3] = \"Wednesday\";\n    //     weekday[4] = \"Thursday\";\n    //     weekday[5] = \"Friday\";\n    //     weekday[6] = \"Saturday\";\n\n    //     return weekday[d.getDay()]\n\n    // }\n\n\n    const a = [0, 1, 2, 3, 4]\n    let daily = props.daily\n\n    return (\n        <div className='WeatherDaily'>\n            <ul className='WeatherDaily__lists'>\n                <div className=\"WeatherDaily__template\">\n                    <div className='WeatherDaily__hr-line'></div>\n                    {a.map(i => {\n                        return <div className={daily[0].summary.includes('rain') || daily[0].summary.includes('drizzle') ? `WeatherDaily__circle--rain WeatherDaily__circle-${i}` : `WeatherDaily__circle WeatherDaily__circle-${i}`} key={i} ></div>\n                    })}\n                </div>\n                {daily.map((item, index) => (\n                    <li className={`WeatherDaily__list-item WeatherDaily__list-item-${index}`} key={index}>\n\n                        <img className='WeatherDaily__icon' src={`${process.env.PUBLIC_URL}/images/weather/${item.icon}.svg`} alt=\"weather icon\" />\n\n                        <p className='WeatherDaily__day'>{weeklyDays(item.time)}</p>\n                        <p className=\"WeatherDaily__temp\">\n                            {tempAvg(item.apparentTemperatureMax, item.apparentTemperatureMin)}Â°\n                        </p>\n\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default WeatherDaily\n","import React from 'react'\n\n\nconst Header = (props) => {\n  return (\n    <header className='Header dropdown-menu generic'>\n      {props.children}\n      <hr className='hr' />\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport WeatherHourly from './WeatherHourly/WeatherHourly'\nimport WeatherDaily from './WeatherDaily/WeatherDaily'\nimport Header from '../Header/Header'\n\n\nconst WeatherToday = (props) => {\n\n\n    const whatToday = () => {\n        const d = new Date();\n        const weekday = new Array(7);\n        weekday[0] = \"Sunday\";\n        weekday[1] = \"Monday\";\n        weekday[2] = \"Tuesday\";\n        weekday[3] = \"Wednesday\";\n        weekday[4] = \"Thursday\";\n        weekday[5] = \"Friday\";\n        weekday[6] = \"Saturday\";\n\n        return weekday[d.getDay()]\n\n    }\n\n\n    let items = props.daily\n\n    return (\n\n        <div className='WeatherToday generic'>\n            <Header>\n                <div className=\"WeatherToday__header__hourly WeaterToday--closer-to-hr Header--margin\">\n                    <h2 className='WeatherToday__header__hourly__day Header__title'>{whatToday()}</h2>\n\n                    <span className='WeatherToday__header__hourly__max'>{props.toCelsius(items[0].apparentTemperatureMax)}Â°</span>\n                    <span className='WeatherToday__header__hourly__min'>{props.toCelsius(items[0].apparentTemperatureMin)}Â°</span>\n\n                </div>\n\n            </Header>\n\n            <p className='WeatherToday__header__hourly__summary'>{props.summaryToday}</p>\n\n            <WeatherHourly hourly={props.hourly} toCelsius={props.toCelsius} />\n\n            <WeatherDaily daily={props.daily} toCelsius={props.toCelsius} days={whatToday} icon={props.icon} />\n        </div>\n    )\n}\n\nexport default WeatherToday\n","import React from 'react'\n\n\n\nconst WhatToWear = (props) => {\n\n\n    const curTemp = props.temperature\n\n    const top = {\n        'coat': { 'temp': curTemp >= 10 && curTemp < 14 },\n        'jacket': { 'temp': curTemp >= 14 && curTemp < 18 },\n        'hoodie': { 'temp': curTemp >= 18 && curTemp < 21 },\n        'paddedjacket': { 'temp': curTemp < 10 },\n        'tanktop': { 'temp': curTemp > 29 },\n        'longshirt': { 'temp': curTemp >= 21 && curTemp < 25 },\n        'tshirt': { 'temp': curTemp >= 25 && curTemp < 31 },\n    }\n\n    const bottom = {\n        'longtrousers': { 'temp': curTemp < 26 },\n        'shorttrousers': { 'temp': curTemp > 25 }\n    }\n\n    const shoe = {\n        'boots': { 'temp': curTemp < 10 },\n        'flipflop': { 'temp': curTemp > 28 },\n        'trainers': { 'temp': curTemp >= 23 && curTemp < 29 },\n        'shoes': { 'temp': curTemp >= 10 && curTemp < 23 }\n    }\n\n    const hat = {\n        'hat': { 'temp': curTemp < 10 }\n    }\n\n    const decisionMaker = (type) => {\n        for (let key in type) {\n            if (type[key]['temp']) {\n                return (\n                    <img className='WhatToWear__outfit__icons__icon' src={`${process.env.PUBLIC_URL}/images/clothes/${key}.svg`} alt=\"outfit for today\" />\n                )\n            }\n\n        }\n\n\n\n\n\n    }\n\n\n\n    const outfitSuggestion = (temp) => {\n        let msg;\n\n        (temp < 10) && (msg = 'wrap yourself');\n        (temp >= 10 && temp < 14) && (msg = 'proper winterwear');\n        (temp >= 14 && temp < 17) && (msg = 'at least take a jacket');\n        (temp >= 17 && temp < 21) && (msg = 'light cardigan or hoodie');\n        (temp >= 21 && temp < 25) && (msg = 'farily light');\n        (temp >= 25 && temp <= 30) && (msg = 'very summery');\n        (temp > 30) && (msg = 'HEATWAVE');\n\n        return (\n            <p className='WhatToWear__outfit__suggestion-msg'>{msg}</p>\n        )\n    }\n\n    const summaryToday = props.daily[0].summary\n\n    return (\n        <div className='WhatToWear'>\n\n            {(summaryToday.includes('rain') || summaryToday.incldues('drizzle')) && (\n                <div className='WhatToWear__rain-warning'>\n                    <div className='WhatToWear__rain-warning__icon'>\n                        <img className='WhatToWear__rain-warning__icon__warning' src={`${process.env.PUBLIC_URL}/images/clothes/exclamation.svg`} alt=\"rain warning\" />\n                        <img className='WhatToWear__rain-warning__icon__umbrella' src={`${process.env.PUBLIC_URL}/images/clothes/umbrellataken.svg`} alt=\"umbrella icon\" />\n                        <img className='WhatToWear__rain-warning__icon__raincoat' src={`${process.env.PUBLIC_URL}/images/clothes/raincoat.svg`} alt=\"raincoat icon\" />\n                    </div>\n                    <div className='WhatToWear__rain-warning__text'>\n                        <p className='WhatToWear__rain-warning__text__rain-msg'>take your umbrella</p>\n                    </div>\n\n                </div>\n            )}\n            <div className='WhatToWear__outfit'>\n                <div className='WhatToWear__outfit__icons'>\n                    {decisionMaker(top)}\n                    {decisionMaker(bottom)}\n                    {decisionMaker(shoe)}\n                    {decisionMaker(hat)}\n                </div>\n\n                {outfitSuggestion(props.temperature)}\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default WhatToWear\n\n// function range(start, edge, step) {\n    //     // If only 1 number passed make it the edge and 0 the start\n    //     if (arguments.length === 1) {\n    //         edge = start;\n    //         start = 0;\n    //     }\n\n    //     // Validate edge/start\n    //     edge = edge || 0;\n    //     step = step || 1;\n\n    //     // Create array of numbers, stopping before the edge\n    //     let arr = [];\n    //     for (arr; (edge - start) * step > 0; start += step) {\n    //         arr.push(start);\n    //     }\n    //     return arr;\n    // }\n\n// const clothes = [\n    //     ['boots', ...range(-40, 10)],\n    //     ['coat', ...range(10, 14)],\n    //     ['flipflop', ...range(29, 51)],\n    //     ['hat', ...range(-40, 10)],\n    //     ['hoodie', ...range(18, 21)],\n    //     ['jacket', ...range(14, 18)],\n    //     ['longshirt', ...range(21, 25)],\n    //     ['longtrousers', ...range(-40, 26)],\n    //     ['paddedjacket', ...range(-40, 10)],\n    //     ['shoes', ...range(10, 23)],\n    //     ['shorttrousers', ...range(26, 51)],\n    //     ['tanktop', ...range(30, 51)],\n    //     ['trainers', ...range(23, 29)],\n    //     ['tshirt', ...range(25, 31)]]\n\n    // const decisionMaker = (temp) => {\n    //     let itemArr = []\n    //     for (let i = 0; i < clothes.length; i++) {\n    //         if (clothes[i].includes(temp)) {\n    //             itemArr.push(clothes[i][0])\n    //         }\n    //     }\n    //     return itemArr\n    // }\n    // console.log(props.currently)\n    // console.log(decisionMaker(props.temperature));","import React from 'react'\n\nconst Spinner = (props) => {\n  return (\n    <div className=\"Spinner\">\n      <div className=\"Spinner__element Spinner__d1\"></div>\n      <div className=\"Spinner__element Spinner__d2\"></div>\n      <div className=\"Spinner__element Spinner__d3\"></div>\n      <div className=\"Spinner__element Spinner__d4\"></div>\n      <div className=\"Spinner__element Spinner__d5\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { Component } from 'react'\n\nimport './App.scss'\nimport Main from './components/Main/Main'\nimport WeatherToday from './components/BottomSection/WeatherToday/WeatherToday'\nimport WhatToWear from './components/BottomSection/WhatToWear/WhatToWear'\nimport Spinner from './components/Spinner'\n\n\n\nclass App extends Component {\n\n  state = {\n    items: [],\n    hourly: [],\n    daily: [],\n    loading: false,\n\n  };\n\n\n  componentDidMount() {\n    // let time\n    let lat\n    let long\n\n    let geo = navigator.geolocation\n\n    if (geo) {\n      geo.getCurrentPosition(position => {\n        // const d = new Date()\n        lat = position.coords.latitude\n        long = position.coords.longitude\n        // time = d.getTime();\n\n        const key = '2c8c1e6560770f3ee472a7dbc4f5b2cb'\n        const proxy = 'https://cors-anywhere.herokuapp.com/'\n        const api = `${proxy}https://api.darksky.net/forecast/${key}/${lat},${long}`\n\n\n\n        fetch(api)\n          .then(res => res.json())\n          .then(res => {\n            this.setState({\n              loading: true,\n              items: res,\n              temperature: this.toCelsius(res.currently.temperature),\n              summary: res.currently.summary,\n              icon: 'rain',\n              // icon: res.currently.icon,\n              location: this.strSlice(res.timezone),\n              hourly: this.apiSlice(res.hourly.data, 0, 10),\n              daily: this.apiSlice(res.daily.data, 0, 5),\n            })\n\n\n          })\n\n      })\n    }\n  }\n\n  strSlice = (str) => {\n    let strArr = str.split('/')\n    return strArr.pop()\n  }\n\n  toCelsius = (temp) => {\n    const celsius = Math.floor((temp - 32) * (5 / 9))\n    return celsius\n  }\n\n  apiSlice = (data, from = 0, to) => {\n    const slicer = data.slice(from, to)\n    return slicer\n  }\n\n\n\n  render() {\n    let { loading, items, hourly, daily } = this.state;\n    // console.log(items)\n\n    console.log(items)\n    console.log(this.state.summary)\n\n    if (!loading) {\n      return (\n        <div className='App App--loading'>\n          <Spinner />\n        </div>\n      )\n\n    }\n    else {\n      const dailySummary = daily[0].summary\n      console.log(daily)\n      return (\n        <div className={dailySummary.includes('rain') || dailySummary.includes('drizzle') ? 'App App--rain' : 'App'}>\n          <Main dailySummary={dailySummary}\n            currently={items.currently} toCelsius={this.toCelsius} location={this.state.location} />\n          <div className=\"wrapper\">\n            <WhatToWear temperature={this.state.temperature} daily={daily} />\n          </div>\n\n          <div className='BottomSection'>\n            <WeatherToday daily={daily} hourly={hourly} summaryToday={items.hourly.summary} icon={items.icon} toCelsius={this.toCelsius} />\n          </div>\n\n        </div>\n      )\n\n    }\n  }\n}\n\nexport default App\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}